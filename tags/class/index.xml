<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Class on 吾月</title>
    <link>http://moonye.me/tags/class/index.xml</link>
    <description>Recent content in Class on 吾月</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="http://moonye.me/tags/class/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>设置 Class Path</title>
      <link>http://moonye.me/tech/setting-the-class-path/</link>
      <pubDate>Fri, 10 Mar 2017 22:15:38 +0800</pubDate>
      
      <guid>http://moonye.me/tech/setting-the-class-path/</guid>
      <description>

&lt;p&gt;&lt;code&gt;Class Path&lt;/code&gt; 是 java 运行时环境（JRE）搜索 classes 文件和其他资源文件的路径。&lt;/p&gt;

&lt;h1 id=&#34;概要&#34;&gt;概要&lt;/h1&gt;

&lt;p&gt;class path 可以通过 &lt;code&gt;-classpath&lt;/code&gt; 选项或者 &lt;code&gt;CLASSPATH&lt;/code&gt; 环境变量来设定。前者是更好的方式，每一个程序都可以单独设置而避免对其他程序产生影响。对于新版的 JDK，&lt;code&gt;CLASSPATH&lt;/code&gt; 环境变量不是必须配置的。&lt;/p&gt;

&lt;p&gt;下面等号两边没有空格，等号后可以没有内容，多个路径需使用分隔符，在 windows 系统中使用分号(;) linux 系统中使用冒号(:)分割。路径按指定的顺序优先搜索。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sdkTool -­classpath classpath1:classpath2...
set CLASSPATH=classpath1;classpath2...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;sdkTool&lt;/code&gt; 一个命令行工具，比如 &lt;code&gt;java&lt;/code&gt;,&lt;code&gt;javac&lt;/code&gt;,&lt;code&gt;javadoc&lt;/code&gt; 或者 &lt;code&gt;apt&lt;/code&gt; 等，请参见此处的&lt;a href=&#34;http://docs.oracle.com/javase/8/docs/technotes/tools/index.html&#34; target=&#34;_blank&#34;&gt;列表&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;classpath1:classpath2&lt;/code&gt; 指向 &lt;code&gt;JAR&lt;/code&gt;、&lt;code&gt;zip&lt;/code&gt;、&lt;code&gt;class&lt;/code&gt; 文件的路径。路径需要以文件名或者文件夹结尾：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;JAR/zip 文件&lt;/code&gt; 路径以 JAR 或者 zip 文件名结尾（包括后缀名）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;没有被命名包名的 class 文件&lt;/code&gt; 路径以包含这些 class 文件的目录结尾&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;包下的 class 文件&lt;/code&gt; 路径结尾为包含根包的文件夹。&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;默认路径为当前文件夹，指定 class path 后会覆盖默认值，如果要包含当前路径，需要将一个点(.)包含在 class path 中。不以&lt;code&gt;目录&lt;/code&gt;、&lt;code&gt;JAR/zip文件&lt;/code&gt;、和星号(*)通配符结尾的路径会被忽略。&lt;/p&gt;

&lt;p&gt;注意：一些早期的JDK版本中，默认的 class path 包含了 &lt;code&gt;&amp;lt;jdk­dir&amp;gt;/classes&lt;/code&gt; ，这个目录仅仅被 JDK 工具使用，用户应用程序需要的 classes 应该单独放到 JDK 目录层次外，这样当需要重新安装 JDK 时不需要重新布置应用程序。&lt;/p&gt;

&lt;h1 id=&#34;class-path-通配符&#34;&gt;Class Path 通配符&lt;/h1&gt;

&lt;p&gt;Class Path 中可以包含通配符(*)以匹配一系列的&lt;code&gt;jar&lt;/code&gt;文件，比如 &lt;code&gt;mydir/*&lt;/code&gt; 会匹配 mydir 目录下的所有 jar 文件。这样并不能匹配 class 文件，如果需要同时匹配 jar 和 class 文件，可以使用&lt;code&gt;mydir:mydir/*&lt;/code&gt; 或者 &lt;code&gt;mydir/*:mydir&lt;/code&gt;，书写的先后顺序决定载入的顺序。&lt;/p&gt;

&lt;p&gt;子文件夹不会被递归搜索，比如 &lt;code&gt;mydir/*&lt;/code&gt; 不会搜索 &lt;code&gt;mydir/subdir1&lt;/code&gt; 下的 jar 文件。如果一个文件夹下有多个 jar 文件，这些 jar 文件的载入顺序是不明确的，可能会跟随系统平台而变，结构良好的程序不应该依赖于确定的载入顺序。如果需要明确载入顺序，可以将 jar 文件在 class path 中逐一明确列出。&lt;/p&gt;

&lt;p&gt;通配符会在调用程序主方法前被展开，并被设置为系统属性&lt;code&gt;java.class.path&lt;/code&gt;的值。通配符对&lt;code&gt;CLASSPATH&lt;/code&gt;环境变量和&lt;code&gt;-classpath&lt;/code&gt;选项都有效，但在 jar-manifest 文件的 Class-Path 条目中无效。&lt;/p&gt;

&lt;h1 id=&#34;class-path-和包名&#34;&gt;Class Path 和包名&lt;/h1&gt;

&lt;p&gt;Java 类的包路径与文件系统的目录层次相对应，但是在指定包名时，需要完整的包路径而不是路径的一部分。&lt;code&gt;java.awt.Button&lt;/code&gt; 的包名需要明确指定为 &lt;code&gt;java.awt&lt;/code&gt;。比如一个名为 &lt;code&gt;Cool.class&lt;/code&gt; 的 class 文件，位于 &lt;code&gt;utility.myapp&lt;/code&gt; 包下，位于 &lt;code&gt;C:\java\MyClasses\utility\myapp&lt;/code&gt; 路径之下，你可以使用以下命令运行这个类：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java ­-classpath C:\java\MyClasses utility.myapp.Cool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而以下命令无效：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java ­-classpath C:\java\MyClasses\utility myapp.Cool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;包名是 class 的一部分，除非重新编译，否则不能被修改。一个包下的多个 class 可以分布在不同文件夹下。&lt;/p&gt;

&lt;p&gt;对于归档文件中的 class 可以使用以下命令运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -­classpath C:\java\MyClasses\myclasses.jar utility.myapp.Cool
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>